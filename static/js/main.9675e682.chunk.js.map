{"version":3,"sources":["components/Cell.tsx","components/Board.tsx","life/life.ts","components/App.tsx","index.tsx"],"names":["Cell","cell","boardWidth","boardHeight","shadow","setCells","handleMouseEnter","handleMouseMove","background","onMouseDown","e","nativeEvent","which","onMouseEnter","style","border","width","height","boxSizing","Board","board","pattern","useState","setShadow","cells","y","x","push","key","getCell","some","sx","sy","leftClick","pos","map","px","py","filter","className","display","flexWrap","onContextMenu","preventDefault","generation","this","Array","from","fill","b","setCell","cnt","dy","dx","nx","ny","Number","arround","patterns","name","BoardArea","styled","div","App","Life","setBoard","undefined","timerID","setTimerID","runInterval","setRunInterval","setPattern","step","clone","stop","clearInterval","justifyContent","flexFlow","margin","forEach","onClick","disabled","setInterval","clear","type","min","max","value","onChange","target","size","length","p","find","console","error","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9675e682.chunk.js","sourcesContent":["import React from \"react\";\nimport * as Life from \"../life/life\";\n\ntype CellProps = {\n  cell: Life.Cell;\n  boardWidth: number;\n  boardHeight: number;\n  shadow: boolean;\n  setCells: (leftClick: boolean) => void;\n  handleMouseMove: () => void;\n};\n\nexport const Cell: React.SFC<CellProps> = ({\n  cell,\n  boardWidth,\n  boardHeight,\n  shadow,\n  setCells,\n  handleMouseMove: handleMouseEnter,\n}) => {\n  let background = \"white\";\n  if (cell && shadow) {\n    background = \"yellow\";\n  } else if (cell) {\n    background = \"lightgreen\";\n  } else if (shadow) {\n    background = \"lightblue\";\n  }\n\n  return (\n    <div\n      onMouseDown={(e) => {\n        switch (e.nativeEvent.which) {\n          case 1:\n            setCells(true);\n            break;\n          case 3:\n            setCells(false);\n            break;\n          default:\n            break;\n        }\n      }}\n      onMouseEnter={() => handleMouseEnter()}\n      style={{\n        background,\n        // 重なってしまうの良くない\n        border: \"1px solid #666\",\n        width: `${(1 / boardWidth) * 100}%`,\n        height: `${(1 / boardHeight) * 100}%`,\n        boxSizing: \"border-box\",\n      }}\n    ></div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Cell } from \"./Cell\";\nimport * as Life from \"../life/life\";\n\ntype BoardProps = {\n  board: Life.Board;\n  pattern: Life.Pattern;\n  setCells: (pos: Array<[number, number]>, cell: Life.Cell) => void;\n};\n\nexport const Board: React.SFC<BoardProps> = ({ board, pattern, setCells }) => {\n  const [shadow, setShadow] = useState<Array<[number, number]>>([]);\n\n  const handleMouseEnter = (x: number, y: number) => {\n    setShadow(pattern.pattern.map(([px, py]) => [x + px, y + py]));\n  };\n\n  const cells = [];\n  for (let y = 0; y < board.height; y++) {\n    for (let x = 0; x < board.width; x++) {\n      cells.push(\n        <Cell\n          key={`${x}-${y}`}\n          boardWidth={board.width}\n          boardHeight={board.height}\n          cell={board.getCell(x, y)}\n          shadow={shadow.some(([sx, sy]) => x === sx && y === sy)}\n          setCells={(leftClick) => {\n            if (!leftClick) {\n              setCells([[x, y]], false);\n              return;\n            }\n            const pos: Array<[number, number]> = pattern.pattern\n              .map(([px, py]): [number, number] => [x + px, y + py])\n              .filter(([x, y]) => x >= 0 && x < board.width && y >= 0 && y < board.height);\n            setCells(pos, true);\n          }}\n          handleMouseMove={() => handleMouseEnter(x, y)}\n        />\n      );\n    }\n  }\n\n  return (\n    <div\n      className=\"board\"\n      style={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      onContextMenu={(e) => e.preventDefault()}\n    >\n      {cells}\n    </div>\n  );\n};\n","export type Cell = boolean;\n\nexport class Board {\n  board: Array<Array<Cell>>;\n  generation: number;\n  readonly width: number;\n  readonly height: number;\n\n  constructor(width: number = 20, height: number = 20) {\n    this.width = width;\n    this.height = height;\n    this.board = Array.from(new Array(this.height), () => new Array(this.width).fill(false));\n    this.generation = 0;\n  }\n\n  clone(): Board {\n    const b = new Board(this.width, this.height);\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        b.setCell(x, y, this.getCell(x, y));\n      }\n    }\n    b.generation = this.generation;\n    return b;\n  }\n\n  arround(x: number, y: number): number {\n    let cnt = 0;\n    for (let dy = -1; dy <= 1; dy++) {\n      for (let dx = -1; dx <= 1; dx++) {\n        if (dx === 0 && dy === 0) continue;\n        const nx = x + dx;\n        const ny = y + dy;\n        if (nx < 0 || nx >= this.width || ny < 0 || ny >= this.height) continue;\n        cnt += Number(this.board[y + dy][x + dx]);\n      }\n    }\n    return cnt;\n  }\n\n  getCell(x: number, y: number): Cell {\n    return this.board[y][x];\n  }\n\n  setCell(x: number, y: number, cell: Cell) {\n    this.board[y][x] = cell;\n  }\n\n  step() {\n    const board = Array.from(new Array(this.height), () => new Array(this.width).fill(false));\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        switch (this.arround(x, y)) {\n          case 2:\n            board[y][x] = this.board[y][x];\n            break;\n          case 3:\n            board[y][x] = true;\n            break;\n          default:\n            board[y][x] = false;\n            break;\n        }\n      }\n    }\n    this.board = board;\n    this.generation++;\n  }\n\n  clear() {\n    this.board = Array.from(new Array(this.height), () => new Array(this.width).fill(false));\n    this.generation = 0;\n  }\n}\n\nexport type Pattern = {\n  name: string;\n  pattern: Array<[number, number]>;\n};\n\nexport const patterns: Array<Pattern> = [\n  { name: \"cell\", pattern: [[0, 0]] },\n  {\n    name: \"glider\",\n    pattern: [\n      [0, -1],\n      [1, 0],\n      [-1, 1],\n      [0, 1],\n      [1, 1],\n    ],\n  },\n  {\n    name: \"spaceship\",\n    pattern: [\n      [-2, -1],\n      [1, -1],\n      [2, 0],\n      [-2, 1],\n      [2, 1],\n      [-1, 2],\n      [0, 2],\n      [1, 2],\n      [2, 2],\n    ],\n  },\n  {\n    name: \"glider gun\",\n    pattern: [\n      [7, -4],\n      [5, -3],\n      [7, -3],\n      [-5, -2],\n      [-4, -2],\n      [3, -2],\n      [4, -2],\n      [17, -2],\n      [18, -2],\n      [-6, -1],\n      [-2, -1],\n      [3, -1],\n      [4, -1],\n      [17, -1],\n      [18, -1],\n      [-17, 0],\n      [-16, 0],\n      [-7, 0],\n      [-1, 0],\n      [3, 0],\n      [4, 0],\n      [-17, 1],\n      [-16, 1],\n      [-7, 1],\n      [-3, 1],\n      [-1, 1],\n      [0, 1],\n      [5, 1],\n      [7, 1],\n      [-7, 2],\n      [-1, 2],\n      [7, 2],\n      [-6, 3],\n      [-2, 3],\n      [-5, 4],\n      [-4, 4],\n    ],\n  },\n];\n","import React, { useState } from \"react\";\nimport { Board } from \"./Board\";\nimport * as Life from \"../life/life\";\nimport styled from \"styled-components\";\n\nconst BoardArea = styled.div`\n  @media (min-aspect-ratio: 99/100) {\n    width: 90vh;\n    height: 90vh;\n  }\n  @media (max-aspect-ratio: 100/99) {\n    width: 90vw;\n    height: 90vw;\n  }\n\n  margin: auto;\n`;\n\nexport const App = () => {\n  const [board, setBoard] = useState(new Life.Board(20, 20));\n  const [timerID, setTimerID] = useState<number | undefined>(undefined);\n  const [runInterval, setRunInterval] = useState(50);\n  const [pattern, setPattern] = useState(Life.patterns[0]);\n\n  const setCells = (pos: Array<[number, number]>, cell: Life.Cell) => {\n    setBoard((board) => {\n      const clone = board.clone();\n      pos.forEach(([x, y]) => clone.setCell(x, y, cell));\n      return clone;\n    });\n  };\n\n  const step = () => {\n    setBoard((board) => {\n      const clone = board.clone();\n      clone.step();\n      return clone;\n    });\n  };\n\n  const run = () => {\n    if (timerID !== undefined) return;\n    setTimerID(setInterval(step, runInterval));\n  };\n\n  const stop = () => {\n    if (timerID === undefined) return;\n    clearInterval(timerID);\n    setTimerID(undefined);\n  };\n\n  const clear = () => {\n    if (timerID !== undefined) {\n      stop();\n    }\n    setBoard((board) => {\n      const clone = board.clone();\n      clone.clear();\n      return clone;\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"container_app\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <div\n          className=\"container_board_buttons\"\n          style={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            margin: 5,\n          }}\n        >\n          <BoardArea>\n            <Board board={board} pattern={pattern} setCells={setCells} />\n          </BoardArea>\n          <div\n            className=\"conainer_buttons\"\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"center\",\n              margin: 5,\n            }}\n          >\n            <button onClick={step}>step</button>\n            <button disabled={timerID !== undefined} onClick={run}>\n              run\n            </button>\n            <button disabled={timerID === undefined} onClick={stop}>\n              stop\n            </button>\n            <button onClick={clear}>clear</button>\n            <input\n              type=\"range\"\n              min=\"10\"\n              max=\"500\"\n              step=\"10\"\n              value={runInterval}\n              disabled={timerID !== undefined}\n              onChange={(e) => setRunInterval(Number(e.target.value))}\n            />\n            <span>{runInterval}(ms)</span>\n            <span>{board.generation}世代</span>\n          </div>\n        </div>\n        <form className=\"pattern_list\" style={{ margin: 5 }}>\n          <select\n            size={Life.patterns.length}\n            value={pattern.name}\n            onChange={(e) => {\n              const p = Life.patterns.find((p) => p.name === e.target.value);\n              if (p === undefined) {\n                // ???\n                console.error(`cannot find pattern ${e.target.value}`);\n                return;\n              }\n              setPattern(p);\n            }}\n          >\n            {Life.patterns.map((pattern, i) => (\n              <option key={i} value={pattern.name}>\n                {pattern.name}\n              </option>\n            ))}\n          </select>\n        </form>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}