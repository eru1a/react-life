{"version":3,"sources":["components/Cell.tsx","components/Board.tsx","life/life.ts","components/App.tsx","index.tsx"],"names":["Cell","cell","shadow","setCells","handleMouseEnter","handleMouseMove","background","onMouseDown","e","nativeEvent","which","onMouseEnter","style","border","padding","width","height","lineHeight","marginTop","marginRight","Board","board","pattern","useState","setShadow","boardElem","y","row","x","push","key","getCell","some","sx","sy","leftClick","pos","map","px","py","className","display","flexDirection","onContextMenu","preventDefault","generation","this","Array","from","fill","b","setCell","cnt","dy","dx","nx","ny","Number","arround","patterns","name","App","Life","setBoard","undefined","timerID","setTimerID","runInterval","setRunInterval","setPattern","step","clone","stop","clearInterval","justifyContent","margin","forEach","onClick","disabled","setInterval","clear","type","min","max","value","onChange","target","size","length","p","find","console","error","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77979ea6.chunk.js","sourcesContent":["import React from \"react\";\nimport * as Life from \"../life/life\";\n\n// 画面の大きさに合わせて変更出来るようにするには...?\nconst cellSize = 20;\n\ntype CellProps = {\n  cell: Life.Cell;\n  shadow: boolean;\n  setCells: (leftClick: boolean) => void;\n  handleMouseMove: () => void;\n};\n\nexport const Cell: React.SFC<CellProps> = ({\n  cell,\n  shadow,\n  setCells,\n  handleMouseMove: handleMouseEnter,\n}) => {\n  let background = \"white\";\n  if (cell && shadow) {\n    background = \"yellow\";\n  } else if (cell) {\n    background = \"lightgreen\";\n  } else if (shadow) {\n    background = \"lightblue\";\n  }\n\n  return (\n    <div\n      onMouseDown={(e) => {\n        switch (e.nativeEvent.which) {\n          case 1:\n            setCells(true);\n            break;\n          case 3:\n            setCells(false);\n            break;\n          default:\n            break;\n        }\n      }}\n      onMouseEnter={() => handleMouseEnter()}\n      style={{\n        background,\n        border: \"1px solid #000\",\n        padding: 0,\n        width: cellSize,\n        height: cellSize,\n        lineHeight: cellSize,\n        marginTop: -1,\n        marginRight: -1,\n      }}\n    ></div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Cell } from \"./Cell\";\nimport * as Life from \"../life/life\";\n\ntype BoardProps = {\n  board: Life.Board;\n  pattern: Life.Pattern;\n  setCells: (pos: Array<[number, number]>, cell: Life.Cell) => void;\n};\n\nexport const Board: React.SFC<BoardProps> = ({ board, pattern, setCells }) => {\n  const [shadow, setShadow] = useState<Array<[number, number]>>([]);\n\n  const handleMouseEnter = (x: number, y: number) => {\n    setShadow(pattern.pattern.map(([px, py]) => [x + px, y + py]));\n  };\n\n  const boardElem = [];\n  for (let y = 0; y < board.height; y++) {\n    const row = [];\n    for (let x = 0; x < board.width; x++) {\n      row.push(\n        <Cell\n          key={x}\n          cell={board.getCell(x, y)}\n          shadow={shadow.some(([sx, sy]) => x === sx && y === sy)}\n          setCells={(leftClick) => {\n            if (!leftClick) {\n              setCells([[x, y]], false);\n              return;\n            }\n            const pos: Array<[number, number]> = pattern.pattern.map(([px, py]) => [\n              x + px,\n              y + py,\n            ]);\n            setCells(pos, true);\n          }}\n          handleMouseMove={() => handleMouseEnter(x, y)}\n        />\n      );\n    }\n    boardElem.push(\n      <div\n        key={y}\n        className=\"board-row\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n      >\n        {row}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className=\"board\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n      onContextMenu={(e) => e.preventDefault()}\n    >\n      {boardElem}\n    </div>\n  );\n};\n","export type Cell = boolean;\n\nexport class Board {\n  board: Array<Array<Cell>>;\n  generation: number;\n  readonly width: number;\n  readonly height: number;\n\n  constructor(width: number = 20, height: number = 20) {\n    this.width = width;\n    this.height = height;\n    this.board = Array.from(new Array(this.height), () => new Array(this.width).fill(false));\n    this.generation = 0;\n  }\n\n  clone(): Board {\n    const b = new Board(this.width, this.height);\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        b.setCell(x, y, this.getCell(x, y));\n      }\n    }\n    b.generation = this.generation;\n    return b;\n  }\n\n  arround(x: number, y: number): number {\n    let cnt = 0;\n    for (let dy = -1; dy <= 1; dy++) {\n      for (let dx = -1; dx <= 1; dx++) {\n        if (dx === 0 && dy === 0) continue;\n        const nx = x + dx;\n        const ny = y + dy;\n        if (nx < 0 || nx >= this.width || ny < 0 || ny >= this.height) continue;\n        cnt += Number(this.board[y + dy][x + dx]);\n      }\n    }\n    return cnt;\n  }\n\n  getCell(x: number, y: number): Cell {\n    return this.board[y][x];\n  }\n\n  setCell(x: number, y: number, cell: Cell) {\n    this.board[y][x] = cell;\n  }\n\n  step() {\n    const board = Array.from(new Array(this.height), () => new Array(this.width).fill(false));\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        switch (this.arround(x, y)) {\n          case 2:\n            board[y][x] = this.board[y][x];\n            break;\n          case 3:\n            board[y][x] = true;\n            break;\n          default:\n            board[y][x] = false;\n            break;\n        }\n      }\n    }\n    this.board = board;\n    this.generation++;\n  }\n\n  clear() {\n    this.board = Array.from(new Array(this.height), () => new Array(this.width).fill(false));\n    this.generation = 0;\n  }\n}\n\nexport type Pattern = {\n  name: string;\n  pattern: Array<[number, number]>;\n};\n\nexport const patterns: Array<Pattern> = [\n  { name: \"cell\", pattern: [[0, 0]] },\n  {\n    name: \"glider\",\n    pattern: [\n      [0, -1],\n      [1, 0],\n      [-1, 1],\n      [0, 1],\n      [1, 1],\n    ],\n  },\n  {\n    name: \"spaceship\",\n    pattern: [\n      [-2, -1],\n      [1, -1],\n      [2, 0],\n      [-2, 1],\n      [2, 1],\n      [-1, 2],\n      [0, 2],\n      [1, 2],\n      [2, 2],\n    ],\n  },\n  {\n    name: \"glider gun\",\n    pattern: [\n      [7, -4],\n      [5, -3],\n      [7, -3],\n      [-5, -2],\n      [-4, -2],\n      [3, -2],\n      [4, -2],\n      [17, -2],\n      [18, -2],\n      [-6, -1],\n      [-2, -1],\n      [3, -1],\n      [4, -1],\n      [17, -1],\n      [18, -1],\n      [-17, 0],\n      [-16, 0],\n      [-7, 0],\n      [-1, 0],\n      [3, 0],\n      [4, 0],\n      [-17, 1],\n      [-16, 1],\n      [-7, 1],\n      [-3, 1],\n      [-1, 1],\n      [0, 1],\n      [5, 1],\n      [7, 1],\n      [-7, 2],\n      [-1, 2],\n      [7, 2],\n      [-6, 3],\n      [-2, 3],\n      [-5, 4],\n      [-4, 4],\n    ],\n  },\n];\n","import React, { useState } from \"react\";\nimport { Board } from \"./Board\";\nimport * as Life from \"../life/life\";\n\nexport const App = () => {\n  const [board, setBoard] = useState(new Life.Board(20, 20));\n  const [timerID, setTimerID] = useState<NodeJS.Timeout | undefined>(undefined);\n  const [runInterval, setRunInterval] = useState(50);\n  const [pattern, setPattern] = useState(Life.patterns[0]);\n\n  const setCells = (pos: Array<[number, number]>, cell: Life.Cell) => {\n    setBoard((board) => {\n      const clone = board.clone();\n      pos.forEach(([x, y]) => clone.setCell(x, y, cell));\n      return clone;\n    });\n  };\n\n  const step = () => {\n    setBoard((board) => {\n      const clone = board.clone();\n      clone.step();\n      return clone;\n    });\n  };\n\n  const run = () => {\n    if (timerID !== undefined) return;\n    setTimerID(setInterval(step, runInterval) as NodeJS.Timeout);\n  };\n\n  const stop = () => {\n    if (timerID === undefined) return;\n    clearInterval(timerID);\n    setTimerID(undefined);\n  };\n\n  const clear = () => {\n    if (timerID !== undefined) {\n      stop();\n    }\n    setBoard((board) => {\n      const clone = board.clone();\n      clone.clear();\n      return clone;\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"container_app\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <div\n          className=\"container_board_buttons\"\n          style={{ display: \"flex\", flexDirection: \"column\", margin: 5 }}\n        >\n          <Board board={board} pattern={pattern} setCells={setCells} />\n          <div\n            className=\"conainer_buttons\"\n            style={{ display: \"flex\", justifyContent: \"center\", margin: 5 }}\n          >\n            <button onClick={step}>step</button>\n            <button disabled={timerID !== undefined} onClick={run}>\n              run\n            </button>\n            <button disabled={timerID === undefined} onClick={stop}>\n              stop\n            </button>\n            <button onClick={clear}>clear</button>\n            <input\n              type=\"range\"\n              min=\"10\"\n              max=\"500\"\n              step=\"10\"\n              value={runInterval}\n              disabled={timerID !== undefined}\n              onChange={(e) => setRunInterval(Number(e.target.value))}\n            />\n            <span>{runInterval}(ms)</span>\n            <span>{board.generation}世代</span>\n          </div>\n        </div>\n        <form className=\"pattern_list\" style={{ margin: 5 }}>\n          <select\n            size={Life.patterns.length}\n            value={pattern.name}\n            onChange={(e) => {\n              const p = Life.patterns.find((p) => p.name === e.target.value);\n              if (p === undefined) {\n                // ???\n                console.error(`cannot find pattern ${e.target.value}`);\n                return;\n              }\n              setPattern(p);\n            }}\n          >\n            {Life.patterns.map((pattern, i) => (\n              <option key={i} value={pattern.name}>\n                {pattern.name}\n              </option>\n            ))}\n          </select>\n        </form>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}